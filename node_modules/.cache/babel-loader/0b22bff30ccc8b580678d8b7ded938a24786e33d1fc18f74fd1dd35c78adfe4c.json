{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noor\\\\Documents\\\\GitHub\\\\PatientJournalFrontend\\\\src\\\\pages\\\\public\\\\ImageEmployee.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageEmployee = () => {\n  _s();\n  const [searchInput, setSearchQuery] = useState('');\n  const [imageBlob, setImageBlob] = useState(null);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 0,\n    height: 0\n  });\n\n  // Refs for the canvas and its 2D context\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  useEffect(() => {\n    // Initialize canvas and 2D context\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    contextRef.current = context;\n\n    // Adjust canvas size based on the loaded image\n    if (imageBlob) {\n      const img = new Image();\n      img.onload = () => {\n        setCanvasSize({\n          width: img.width,\n          height: img.height\n        });\n        canvas.width = img.width;\n        canvas.height = img.height;\n        contextRef.current.drawImage(img, 0, 0, img.width, img.height);\n      };\n      img.src = URL.createObjectURL(imageBlob);\n    }\n  }, [imageBlob]);\n  const searchImage = () => {\n    // Perform the search logic here\n    console.log('Searching for image:', searchInput);\n    fetch(`http://localhost:3001/image/${searchInput}`).then(response => {\n      if (response.ok) {\n        return response.blob();\n      } else {\n        throw new Error('Image not found');\n      }\n    }).then(blob => {\n      setImageBlob(blob);\n    }).catch(error => {\n      console.error('Something went wrong while fetching the image:', error);\n    });\n  };\n\n  // Handle painting on the canvas\n  const handleCanvasClick = e => {\n    const x = e.nativeEvent.offsetX;\n    const y = e.nativeEvent.offsetY;\n\n    // Customize your painting logic here\n    contextRef.current.fillStyle = 'red';\n    contextRef.current.fillRect(x, y, 10, 10);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bildhantering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"S\\xF6k efter bild\",\n      value: searchInput,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchImage,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), canvasSize.width > 0 && canvasSize.height > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasSize.width,\n      height: canvasSize.height,\n      style: {\n        border: '1px solid black'\n      },\n      onClick: handleCanvasClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageEmployee, \"Hg4r65Q9W2UtbLu8IMxsXp8VY78=\");\n_c = ImageEmployee;\nexport default ImageEmployee;\nvar _c;\n$RefreshReg$(_c, \"ImageEmployee\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ImageEmployee","_s","searchInput","setSearchQuery","imageBlob","setImageBlob","canvasSize","setCanvasSize","width","height","canvasRef","contextRef","canvas","current","context","getContext","img","Image","onload","drawImage","src","URL","createObjectURL","searchImage","console","log","fetch","then","response","ok","blob","Error","catch","error","handleCanvasClick","e","x","nativeEvent","offsetX","y","offsetY","fillStyle","fillRect","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","ref","style","border","_c","$RefreshReg$"],"sources":["C:/Users/Noor/Documents/GitHub/PatientJournalFrontend/src/pages/public/ImageEmployee.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst ImageEmployee = () => {\r\n  const [searchInput, setSearchQuery] = useState('');\r\n  const [imageBlob, setImageBlob] = useState(null);\r\n  const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\r\n\r\n  // Refs for the canvas and its 2D context\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize canvas and 2D context\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    contextRef.current = context;\r\n\r\n    // Adjust canvas size based on the loaded image\r\n    if (imageBlob) {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        setCanvasSize({ width: img.width, height: img.height });\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        contextRef.current.drawImage(img, 0, 0, img.width, img.height);\r\n      };\r\n      img.src = URL.createObjectURL(imageBlob);\r\n    }\r\n  }, [imageBlob]);\r\n\r\n  const searchImage = () => {\r\n    // Perform the search logic here\r\n    console.log('Searching for image:', searchInput);\r\n\r\n    fetch(`http://localhost:3001/image/${searchInput}`)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.blob();\r\n        } else {\r\n          throw new Error('Image not found');\r\n        }\r\n      })\r\n      .then((blob) => {\r\n        setImageBlob(blob);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Something went wrong while fetching the image:', error);\r\n      });\r\n  };\r\n\r\n  // Handle painting on the canvas\r\n  const handleCanvasClick = (e) => {\r\n    const x = e.nativeEvent.offsetX;\r\n    const y = e.nativeEvent.offsetY;\r\n\r\n    // Customize your painting logic here\r\n    contextRef.current.fillStyle = 'red';\r\n    contextRef.current.fillRect(x, y, 10, 10);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bildhantering</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"SÃ¶k efter bild\"\r\n        value={searchInput}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n      />\r\n      <button onClick={searchImage}>Search</button>\r\n      {canvasSize.width > 0 && canvasSize.height > 0 && (\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={canvasSize.width}\r\n          height={canvasSize.height}\r\n          style={{ border: '1px solid black' }}\r\n          onClick={handleCanvasClick}\r\n        ></canvas>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageEmployee;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;;EAErE;EACA,MAAMC,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMc,UAAU,GAAGd,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,MAAM,GAAGF,SAAS,CAACG,OAAO;IAChC,MAAMC,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACvCJ,UAAU,CAACE,OAAO,GAAGC,OAAO;;IAE5B;IACA,IAAIV,SAAS,EAAE;MACb,MAAMY,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,MAAM,GAAG,MAAM;QACjBX,aAAa,CAAC;UAAEC,KAAK,EAAEQ,GAAG,CAACR,KAAK;UAAEC,MAAM,EAAEO,GAAG,CAACP;QAAO,CAAC,CAAC;QACvDG,MAAM,CAACJ,KAAK,GAAGQ,GAAG,CAACR,KAAK;QACxBI,MAAM,CAACH,MAAM,GAAGO,GAAG,CAACP,MAAM;QAC1BE,UAAU,CAACE,OAAO,CAACM,SAAS,CAACH,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEA,GAAG,CAACR,KAAK,EAAEQ,GAAG,CAACP,MAAM,CAAC;MAChE,CAAC;MACDO,GAAG,CAACI,GAAG,GAAGC,GAAG,CAACC,eAAe,CAAClB,SAAS,CAAC;IAC1C;EACF,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMmB,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEvB,WAAW,CAAC;IAEhDwB,KAAK,CAAE,+BAA8BxB,WAAY,EAAC,CAAC,CAChDyB,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACf,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;IACF,CAAC,CAAC,CACDJ,IAAI,CAAEG,IAAI,IAAK;MACdzB,YAAY,CAACyB,IAAI,CAAC;IACpB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBT,OAAO,CAACS,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IACxE,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,CAAC,GAAGD,CAAC,CAACE,WAAW,CAACC,OAAO;IAC/B,MAAMC,CAAC,GAAGJ,CAAC,CAACE,WAAW,CAACG,OAAO;;IAE/B;IACA7B,UAAU,CAACE,OAAO,CAAC4B,SAAS,GAAG,KAAK;IACpC9B,UAAU,CAACE,OAAO,CAAC6B,QAAQ,CAACN,CAAC,EAAEG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EAC3C,CAAC;EAED,oBACExC,OAAA;IAAA4C,QAAA,gBACE5C,OAAA;MAAA4C,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBhD,OAAA;MACEiD,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAgB;MAC5BC,KAAK,EAAEhD,WAAY;MACnBiD,QAAQ,EAAGhB,CAAC,IAAKhC,cAAc,CAACgC,CAAC,CAACiB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFhD,OAAA;MAAQsD,OAAO,EAAE9B,WAAY;MAAAoB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5CzC,UAAU,CAACE,KAAK,GAAG,CAAC,IAAIF,UAAU,CAACG,MAAM,GAAG,CAAC,iBAC5CV,OAAA;MACEuD,GAAG,EAAE5C,SAAU;MACfF,KAAK,EAAEF,UAAU,CAACE,KAAM;MACxBC,MAAM,EAAEH,UAAU,CAACG,MAAO;MAC1B8C,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAkB,CAAE;MACrCH,OAAO,EAAEnB;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9C,EAAA,CA/EID,aAAa;AAAAyD,EAAA,GAAbzD,aAAa;AAiFnB,eAAeA,aAAa;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}