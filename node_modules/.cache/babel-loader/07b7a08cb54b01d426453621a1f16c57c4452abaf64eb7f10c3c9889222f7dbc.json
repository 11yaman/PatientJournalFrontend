{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noor\\\\Documents\\\\GitHub\\\\PatientJournalFrontend\\\\src\\\\pages\\\\public\\\\ImageEmployee.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport useImage from '../../hooks/useImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageEmployee = () => {\n  _s();\n  const [searchInput, setSearchQuery] = useState('');\n  const [imageBlob, setImageBlob] = useState(null);\n  const [imageName, setImageName] = useState('');\n  const [tool, setTool] = useState('Pen'); // Default tool is 'Pen'\n  const [color, setColor] = useState('#000000'); // Default color is 'black'\n  const [size, setSize] = useState('Medium'); // Default size is 'Medium'\n\n  // Refs for the canvas and its 2D context\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const isDrawing = useRef(false);\n  useEffect(() => {\n    // Initialize canvas and 2D context\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    contextRef.current = context;\n    if (imageBlob) {\n      // Draw the image on the canvas\n      const img = new Image();\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        contextRef.current.drawImage(img, 0, 0, img.width, img.height);\n      };\n      img.src = URL.createObjectURL(imageBlob);\n    }\n  }, [imageBlob]);\n  const handleSearchImage = () => {\n    searchImage(searchInput);\n  };\n\n  // Handle painting on the canvas\n  const startDrawing = e => {\n    isDrawing.current = true;\n    draw(e);\n  };\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    contextRef.current.beginPath();\n  };\n  const draw = e => {\n    if (!isDrawing.current) return;\n    const x = e.nativeEvent.offsetX;\n    const y = e.nativeEvent.offsetY;\n    contextRef.current.fillStyle = color;\n    contextRef.current.strokeStyle = color;\n    contextRef.current.lineWidth = getSizeValue();\n    if (tool === 'Pen') {\n      contextRef.current.lineTo(x, y);\n      contextRef.current.stroke();\n      contextRef.current.beginPath();\n      contextRef.current.arc(x, y, getSizeValue() / 2, 0, Math.PI * 2);\n      contextRef.current.fill();\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(x, y);\n    } else {\n      const text = prompt('Enter text:');\n      contextRef.current.font = `bold ${getSizeValue() * 5}px Arial`;\n      contextRef.current.fillText(text, x, y);\n    }\n  };\n  const getSizeValue = () => {\n    switch (size) {\n      case 'Small':\n        return 3;\n      case 'Medium':\n        return 6;\n      case 'Large':\n        return 9;\n      default:\n        return 6;\n    }\n  };\n  const saveImage = () => {\n    // Convert the canvas content to a blob\n    canvasRef.current.toBlob(blob => {\n      if (blob) {\n        // Create a FormData object to send the image file\n        const formData = new FormData();\n        formData.append('image', blob, `${imageName}.png`);\n\n        // Perform the POST request to upload the image\n        fetch('http://localhost:3001/upload', {\n          method: 'POST',\n          body: formData\n        }).then(response => response.json()).then(data => {\n          console.log('Image uploaded successfully:', data);\n        }).catch(error => {\n          console.error('Error uploading image:', error);\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bildhantering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"S\\xF6k efter bild\",\n      value: searchInput,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearchImage,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        onMouseDown: startDrawing,\n        onMouseUp: stopDrawing,\n        onMouseOut: stopDrawing,\n        onMouseMove: draw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tool:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: tool,\n          onChange: e => setTool(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pen\",\n            children: \"Pen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: e => setColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Size:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: size,\n          onChange: e => setSize(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Small\",\n            children: \"Small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Large\",\n            children: \"Large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveImage,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageEmployee, \"E76+Cl/2Ceyj8JFkEKep6BAdPXk=\");\n_c = ImageEmployee;\nexport default ImageEmployee;\nvar _c;\n$RefreshReg$(_c, \"ImageEmployee\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useImage","jsxDEV","_jsxDEV","ImageEmployee","_s","searchInput","setSearchQuery","imageBlob","setImageBlob","imageName","setImageName","tool","setTool","color","setColor","size","setSize","canvasRef","contextRef","isDrawing","canvas","current","context","getContext","img","Image","onload","width","height","drawImage","src","URL","createObjectURL","handleSearchImage","searchImage","startDrawing","e","draw","stopDrawing","beginPath","x","nativeEvent","offsetX","y","offsetY","fillStyle","strokeStyle","lineWidth","getSizeValue","lineTo","stroke","arc","Math","PI","fill","moveTo","text","prompt","font","fillText","saveImage","toBlob","blob","formData","FormData","append","fetch","method","body","then","response","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","ref","onMouseDown","onMouseUp","onMouseOut","onMouseMove","_c","$RefreshReg$"],"sources":["C:/Users/Noor/Documents/GitHub/PatientJournalFrontend/src/pages/public/ImageEmployee.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport useImage from '../../hooks/useImage'\r\n\r\nconst ImageEmployee = () => {\r\n  const [searchInput, setSearchQuery] = useState('');\r\n  const [imageBlob, setImageBlob] = useState(null);\r\n  const [imageName, setImageName] = useState('');\r\n  const [tool, setTool] = useState('Pen'); // Default tool is 'Pen'\r\n  const [color, setColor] = useState('#000000'); // Default color is 'black'\r\n  const [size, setSize] = useState('Medium'); // Default size is 'Medium'\r\n\r\n  // Refs for the canvas and its 2D context\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n  const isDrawing = useRef(false);\r\n\r\n  useEffect(() => {\r\n    // Initialize canvas and 2D context\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    contextRef.current = context;\r\n\r\n    if (imageBlob) {\r\n      // Draw the image on the canvas\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        contextRef.current.drawImage(img, 0, 0, img.width, img.height);\r\n      };\r\n      img.src = URL.createObjectURL(imageBlob);\r\n    }\r\n  }, [imageBlob]);\r\n\r\n  const handleSearchImage = () => {\r\n    searchImage(searchInput);\r\n  };\r\n\r\n  // Handle painting on the canvas\r\n  const startDrawing = (e) => {\r\n    isDrawing.current = true;\r\n    draw(e);\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    isDrawing.current = false;\r\n    contextRef.current.beginPath();\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!isDrawing.current) return;\r\n\r\n    const x = e.nativeEvent.offsetX;\r\n    const y = e.nativeEvent.offsetY;\r\n\r\n    contextRef.current.fillStyle = color;\r\n    contextRef.current.strokeStyle = color;\r\n    contextRef.current.lineWidth = getSizeValue();\r\n\r\n    if (tool === 'Pen') {\r\n      contextRef.current.lineTo(x, y);\r\n      contextRef.current.stroke();\r\n      contextRef.current.beginPath();\r\n      contextRef.current.arc(x, y, getSizeValue() / 2, 0, Math.PI * 2);\r\n      contextRef.current.fill();\r\n      contextRef.current.beginPath();\r\n      contextRef.current.moveTo(x, y);\r\n    } else {\r\n      const text = prompt('Enter text:');\r\n      contextRef.current.font = `bold ${getSizeValue() * 5}px Arial`;\r\n      contextRef.current.fillText(text, x, y);\r\n    }\r\n  };\r\n\r\n  const getSizeValue = () => {\r\n    switch (size) {\r\n      case 'Small':\r\n        return 3;\r\n      case 'Medium':\r\n        return 6;\r\n      case 'Large':\r\n        return 9;\r\n      default:\r\n        return 6;\r\n    }\r\n  };\r\n\r\n  const saveImage = () => {\r\n    // Convert the canvas content to a blob\r\n    canvasRef.current.toBlob((blob) => {\r\n      if (blob) {\r\n        // Create a FormData object to send the image file\r\n        const formData = new FormData();\r\n        formData.append('image', blob, `${imageName}.png`);\r\n\r\n        // Perform the POST request to upload the image\r\n        fetch('http://localhost:3001/upload', {\r\n          method: 'POST',\r\n          body: formData,\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            console.log('Image uploaded successfully:', data);\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error uploading image:', error);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bildhantering</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Sök efter bild\"\r\n        value={searchInput}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n      />\r\n      <button onClick={handleSearchImage}>Search</button>\r\n      <br />\r\n      <div>\r\n        <canvas\r\n          ref={canvasRef}\r\n          onMouseDown={startDrawing}\r\n          onMouseUp={stopDrawing}\r\n          onMouseOut={stopDrawing}\r\n          onMouseMove={draw}\r\n        ></canvas>\r\n        <label>\r\n          Tool:\r\n          <select value={tool} onChange={(e) => setTool(e.target.value)}>\r\n            <option value=\"Pen\">Pen</option>\r\n            <option value=\"Text\">Text</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Color:\r\n          <input type=\"color\" value={color} onChange={(e) => setColor(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          Size:\r\n          <select value={size} onChange={(e) => setSize(e.target.value)}>\r\n            <option value=\"Small\">Small</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"Large\">Large</option>\r\n          </select>\r\n        </label>\r\n        <button onClick={saveImage}>Save</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageEmployee;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}