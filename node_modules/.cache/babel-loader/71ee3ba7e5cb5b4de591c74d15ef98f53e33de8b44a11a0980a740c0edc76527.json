{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noor\\\\Documents\\\\GitHub\\\\PatientJournalFrontend\\\\src\\\\pages\\\\public\\\\ImageEmployee.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageEmployee = () => {\n  _s();\n  const [searchInput, setSearchQuery] = useState('');\n  const [imageBlob, setImageBlob] = useState(null);\n  const [tool, setTool] = useState('Pen'); // Default tool is 'Pen'\n  const [color, setColor] = useState('#FF0000'); // Default color is 'red'\n  const [size, setSize] = useState('Medium'); // Default size is 'Medium'\n\n  // Refs for the canvas and its 2D context\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  useEffect(() => {\n    // Initialize canvas and 2D context\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    contextRef.current = context;\n    if (imageBlob) {\n      // Draw the image on the canvas\n      const img = new Image();\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        contextRef.current.drawImage(img, 0, 0, img.width, img.height);\n      };\n      img.src = URL.createObjectURL(imageBlob);\n    }\n  }, [imageBlob]);\n  const searchImage = () => {\n    // Perform the search logic here\n    console.log('Searching for image:', searchInput);\n    fetch(`http://localhost:3001/image/${searchInput}`).then(response => {\n      if (response.ok) {\n        return response.blob();\n      } else {\n        throw new Error('Image not found');\n      }\n    }).then(blob => {\n      setImageBlob(blob);\n    }).catch(error => {\n      console.error('Something went wrong while fetching the image:', error);\n    });\n  };\n\n  // Handle painting on the canvas\n  const handleCanvasClick = e => {\n    const x = e.nativeEvent.offsetX;\n    const y = e.nativeEvent.offsetY;\n\n    // Customize your painting logic based on the selected tool, color, and size\n    if (tool === 'Pen') {\n      contextRef.current.fillStyle = color;\n      contextRef.current.fillRect(x, y, getSizeValue(), getSizeValue());\n    } else if (tool === 'Text') {\n      const text = prompt('Enter text:');\n      contextRef.current.fillStyle = color;\n      contextRef.current.font = `${getSizeValue() * 5}px Arial`;\n      contextRef.current.fillText(text, x, y);\n    }\n  };\n\n  // Helper function to get size value based on the selected size\n  const getSizeValue = () => {\n    switch (size) {\n      case 'Small':\n        return 5;\n      case 'Medium':\n        return 10;\n      case 'Large':\n        return 15;\n      default:\n        return 10;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bildhantering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tool:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: tool,\n          onChange: e => setTool(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pen\",\n            children: \"Pen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: e => setColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Size:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: size,\n          onChange: e => setSize(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Small\",\n            children: \"Small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Large\",\n            children: \"Large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"S\\xF6k efter bild\",\n      value: searchInput,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchImage,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onClick: handleCanvasClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageEmployee, \"lW7iyPBGBnnH4BT+TnZdQ6OVHY4=\");\n_c = ImageEmployee;\nexport default ImageEmployee;\nvar _c;\n$RefreshReg$(_c, \"ImageEmployee\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ImageEmployee","_s","searchInput","setSearchQuery","imageBlob","setImageBlob","tool","setTool","color","setColor","size","setSize","canvasRef","contextRef","canvas","current","context","getContext","img","Image","onload","width","height","drawImage","src","URL","createObjectURL","searchImage","console","log","fetch","then","response","ok","blob","Error","catch","error","handleCanvasClick","e","x","nativeEvent","offsetX","y","offsetY","fillStyle","fillRect","getSizeValue","text","prompt","font","fillText","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","type","placeholder","onClick","ref","_c","$RefreshReg$"],"sources":["C:/Users/Noor/Documents/GitHub/PatientJournalFrontend/src/pages/public/ImageEmployee.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst ImageEmployee = () => {\r\n  const [searchInput, setSearchQuery] = useState('');\r\n  const [imageBlob, setImageBlob] = useState(null);\r\n  const [tool, setTool] = useState('Pen'); // Default tool is 'Pen'\r\n  const [color, setColor] = useState('#FF0000'); // Default color is 'red'\r\n  const [size, setSize] = useState('Medium'); // Default size is 'Medium'\r\n\r\n  // Refs for the canvas and its 2D context\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize canvas and 2D context\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    contextRef.current = context;\r\n\r\n    if (imageBlob) {\r\n      // Draw the image on the canvas\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        contextRef.current.drawImage(img, 0, 0, img.width, img.height);\r\n      };\r\n      img.src = URL.createObjectURL(imageBlob);\r\n    }\r\n  }, [imageBlob]);\r\n\r\n  const searchImage = () => {\r\n    // Perform the search logic here\r\n    console.log('Searching for image:', searchInput);\r\n\r\n    fetch(`http://localhost:3001/image/${searchInput}`)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.blob();\r\n        } else {\r\n          throw new Error('Image not found');\r\n        }\r\n      })\r\n      .then((blob) => {\r\n        setImageBlob(blob);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Something went wrong while fetching the image:', error);\r\n      });\r\n  };\r\n\r\n  // Handle painting on the canvas\r\n  const handleCanvasClick = (e) => {\r\n    const x = e.nativeEvent.offsetX;\r\n    const y = e.nativeEvent.offsetY;\r\n\r\n    // Customize your painting logic based on the selected tool, color, and size\r\n    if (tool === 'Pen') {\r\n      contextRef.current.fillStyle = color;\r\n      contextRef.current.fillRect(x, y, getSizeValue(), getSizeValue());\r\n    } else if (tool === 'Text') {\r\n      const text = prompt('Enter text:');\r\n      contextRef.current.fillStyle = color;\r\n      contextRef.current.font = `${getSizeValue() * 5}px Arial`;\r\n      contextRef.current.fillText(text, x, y);\r\n    }\r\n  };\r\n\r\n  // Helper function to get size value based on the selected size\r\n  const getSizeValue = () => {\r\n    switch (size) {\r\n      case 'Small':\r\n        return 5;\r\n      case 'Medium':\r\n        return 10;\r\n      case 'Large':\r\n        return 15;\r\n      default:\r\n        return 10;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bildhantering</h1>\r\n      <div>\r\n        <label>\r\n          Tool:\r\n          <select value={tool} onChange={(e) => setTool(e.target.value)}>\r\n            <option value=\"Pen\">Pen</option>\r\n            <option value=\"Text\">Text</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Color:\r\n          <input type=\"color\" value={color} onChange={(e) => setColor(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          Size:\r\n          <select value={size} onChange={(e) => setSize(e.target.value)}>\r\n            <option value=\"Small\">Small</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"Large\">Large</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Sök efter bild\"\r\n        value={searchInput}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n      />\r\n      <button onClick={searchImage}>Search</button>\r\n      <br />\r\n      <canvas ref={canvasRef} onClick={handleCanvasClick}></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageEmployee;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}