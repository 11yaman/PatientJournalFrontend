{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport useApi from './useApi';\nimport useAuth from './useAuth';\nimport { toast } from 'react-toastify';\nconst useNotes = (patientId, token) => {\n  _s();\n  const {\n    get,\n    loading,\n    error\n  } = useApi();\n  const [notes, setNotes] = useState([]);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (user && user.token) {\n          const fetchedNotes = await get(`http://localhost:8083/api/v1/patients/notes/list?patientId=${patientId}`, user.token, {\n            'Content-Type': 'application/json'\n          });\n          if (fetchedNotes) {\n            setNotes(fetchedNotes);\n          } else {\n            toast.error('Error fetching patient notes');\n          }\n        }\n      } catch (apiError) {\n        toast.error('Error fetching patient notes');\n      }\n    };\n    fetchData();\n  }, [patientId, user]);\n  return {\n    notes,\n    loading\n  };\n};\n_s(useNotes, \"ofktTXlvvrTJQ26+dLaQbYKTlDM=\", false, function () {\n  return [useApi, useAuth];\n});\nexport default useNotes;","map":{"version":3,"names":["useEffect","useState","useApi","useAuth","toast","useNotes","patientId","token","_s","get","loading","error","notes","setNotes","user","fetchData","fetchedNotes","apiError"],"sources":["C:/Users/Yaman/GitHub/PatientJournalFrontend/src/hooks/useNotes.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport useApi from './useApi';\r\nimport useAuth from './useAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useNotes = (patientId, token) => {\r\n  const { get, loading, error } = useApi();\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  const {user} = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (user && user.token ) {\r\n          const fetchedNotes = await get(\r\n            `http://localhost:8083/api/v1/patients/notes/list?patientId=${patientId}`,\r\n            user.token,\r\n            { 'Content-Type': 'application/json' }\r\n          );\r\n\r\n          if (fetchedNotes) {\r\n            setNotes(fetchedNotes);\r\n          } else {\r\n            toast.error('Error fetching patient notes');\r\n          }\r\n        }\r\n      } catch (apiError) {\r\n        toast.error('Error fetching patient notes');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [patientId, user]);\r\n\r\n  return { notes, loading };\r\n};\r\n\r\nexport default useNotes;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,QAAQ,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,GAAG;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGT,MAAM,CAAC,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM;IAACa;EAAI,CAAC,GAAGX,OAAO,CAAC,CAAC;EAExBH,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAID,IAAI,IAAIA,IAAI,CAACP,KAAK,EAAG;UACvB,MAAMS,YAAY,GAAG,MAAMP,GAAG,CAC3B,8DAA6DH,SAAU,EAAC,EACzEQ,IAAI,CAACP,KAAK,EACV;YAAE,cAAc,EAAE;UAAmB,CACvC,CAAC;UAED,IAAIS,YAAY,EAAE;YAChBH,QAAQ,CAACG,YAAY,CAAC;UACxB,CAAC,MAAM;YACLZ,KAAK,CAACO,KAAK,CAAC,8BAA8B,CAAC;UAC7C;QACF;MACF,CAAC,CAAC,OAAOM,QAAQ,EAAE;QACjBb,KAAK,CAACO,KAAK,CAAC,8BAA8B,CAAC;MAC7C;IACF,CAAC;IAEDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACT,SAAS,EAAEQ,IAAI,CAAC,CAAC;EAErB,OAAO;IAAEF,KAAK;IAAEF;EAAQ,CAAC;AAC3B,CAAC;AAACF,EAAA,CA/BIH,QAAQ;EAAA,QACoBH,MAAM,EAGvBC,OAAO;AAAA;AA6BxB,eAAeE,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}