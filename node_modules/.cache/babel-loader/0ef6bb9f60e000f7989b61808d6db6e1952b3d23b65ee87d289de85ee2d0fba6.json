{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useImage = canvasRef => {\n  _s();\n  const [imageBlob, setImageBlob] = useState(null);\n  const [imageName, setImageName] = useState('');\n  const searchImage = async searchInput => {\n    try {\n      const response = await fetch(`http://localhost:3001/image/${searchInput}`);\n      if (response.ok) {\n        setImageName(searchInput);\n        const blob = await response.blob();\n        setImageBlob(blob);\n      } else {\n        throw new Error('Image not found');\n      }\n    } catch (error) {\n      console.error('Something went wrong while fetching the image:', error);\n    }\n  };\n  const saveImage = async imageName => {\n    try {\n      const blob = await new Promise(resolve => {\n        canvasRef.current.toBlob(blob => resolve(blob));\n      });\n      if (blob) {\n        const formData = new FormData();\n        formData.append('image', blob, `${imageName}`);\n        const response = await fetch('http://localhost:3001/upload', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Image uploaded successfully:', data);\n        } else {\n          throw new Error('Error uploading image');\n        }\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  return {\n    imageBlob,\n    searchImage,\n    saveImage\n  };\n};\n_s(useImage, \"9dkIu13neSd/2lQvt7ItKnfF/qM=\");\nexport default useImage;","map":{"version":3,"names":["useState","useImage","canvasRef","_s","imageBlob","setImageBlob","imageName","setImageName","searchImage","searchInput","response","fetch","ok","blob","Error","error","console","saveImage","Promise","resolve","current","toBlob","formData","FormData","append","method","body","data","json","log"],"sources":["C:/Users/Noor/Documents/GitHub/PatientJournalFrontend/src/hooks/useImage.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst useImage = (canvasRef) => {\r\n  const [imageBlob, setImageBlob] = useState(null);\r\n  const [imageName, setImageName] = useState('');\r\n\r\n  const searchImage = async (searchInput) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/image/${searchInput}`);\r\n      if (response.ok) {\r\n        setImageName(searchInput);\r\n        const blob = await response.blob();\r\n        setImageBlob(blob);\r\n      } else {\r\n        throw new Error('Image not found');\r\n      }\r\n    } catch (error) {\r\n      console.error('Something went wrong while fetching the image:', error);\r\n    }\r\n  };\r\n\r\n  const saveImage = async (imageName) => {\r\n    try {\r\n      const blob = await new Promise((resolve) => {\r\n        canvasRef.current.toBlob((blob) => resolve(blob));\r\n      });\r\n\r\n      if (blob) {\r\n        const formData = new FormData();\r\n        formData.append('image', blob, `${imageName}`);\r\n\r\n        const response = await fetch('http://localhost:3001/upload', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log('Image uploaded successfully:', data);\r\n        } else {\r\n          throw new Error('Error uploading image');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n    }\r\n  };\r\n\r\n  return { imageBlob, searchImage, saveImage };\r\n};\r\n\r\nexport default useImage;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,QAAQ,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMQ,WAAW,GAAG,MAAOC,WAAW,IAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BF,WAAY,EAAC,CAAC;MAC1E,IAAIC,QAAQ,CAACE,EAAE,EAAE;QACfL,YAAY,CAACE,WAAW,CAAC;QACzB,MAAMI,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCR,YAAY,CAACQ,IAAI,CAAC;MACpB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IACxE;EACF,CAAC;EAED,MAAME,SAAS,GAAG,MAAOX,SAAS,IAAK;IACrC,IAAI;MACF,MAAMO,IAAI,GAAG,MAAM,IAAIK,OAAO,CAAEC,OAAO,IAAK;QAC1CjB,SAAS,CAACkB,OAAO,CAACC,MAAM,CAAER,IAAI,IAAKM,OAAO,CAACN,IAAI,CAAC,CAAC;MACnD,CAAC,CAAC;MAEF,IAAIA,IAAI,EAAE;QACR,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEX,IAAI,EAAG,GAAEP,SAAU,EAAC,CAAC;QAE9C,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;UAC3Dc,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEJ;QACR,CAAC,CAAC;QAEF,IAAIZ,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMe,IAAI,GAAG,MAAMjB,QAAQ,CAACkB,IAAI,CAAC,CAAC;UAClCZ,OAAO,CAACa,GAAG,CAAC,8BAA8B,EAAEF,IAAI,CAAC;QACnD,CAAC,MAAM;UACL,MAAM,IAAIb,KAAK,CAAC,uBAAuB,CAAC;QAC1C;MACF;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,OAAO;IAAEX,SAAS;IAAEI,WAAW;IAAES;EAAU,CAAC;AAC9C,CAAC;AAACd,EAAA,CA/CIF,QAAQ;AAiDd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}